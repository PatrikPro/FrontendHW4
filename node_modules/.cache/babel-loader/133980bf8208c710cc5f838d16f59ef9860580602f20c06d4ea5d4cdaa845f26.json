{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Patrik\\\\Documents\\\\Projekty\\\\FrontendHW4\\\\FrontendHW4\\\\src\\\\components\\\\ShoppingListDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './ShoppingListDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = 'http://localhost:5000'; // Replace with your backend server URL\n\nfunction ShoppingListDetail() {\n  _s();\n  const {\n    id\n  } = useParams(); // Extract the list ID from the URL\n  const navigate = useNavigate();\n  const [listData, setListData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newItem, setNewItem] = useState('');\n\n  // Fetch shopping list data when the component mounts or the ID changes\n  useEffect(() => {\n    const fetchShoppingList = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/shopping-lists/${id}`);\n        if (!response.ok) throw new Error('Failed to fetch shopping list');\n        const data = await response.json();\n        setListData(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchShoppingList();\n  }, [id]);\n\n  // Add a new item\n  const addItem = async () => {\n    if (!newItem.trim()) return;\n    try {\n      const response = await fetch(`${BASE_URL}/shopping-lists/${id}/items`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newItem,\n          isResolved: false\n        })\n      });\n      if (!response.ok) throw new Error('Failed to add item');\n      const updatedList = await response.json();\n      setListData(updatedList); // Update list with the newly added item\n      setNewItem('');\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shopping-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"back-button\",\n        onClick: () => navigate('/'),\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: listData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-container\",\n      children: listData.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `item-row ${item.isResolved ? 'resolved' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.isResolved,\n            onChange: async () => {\n              // Toggle item resolved state\n              const response = await fetch(`${BASE_URL}/shopping-lists/${id}/items/${item.id}`, {\n                method: 'PATCH',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  isResolved: !item.isResolved\n                })\n              });\n              if (response.ok) {\n                const updatedList = await response.json();\n                setListData(updatedList);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-item-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter item name\",\n        value: newItem,\n        onChange: e => setNewItem(e.target.value),\n        className: \"add-item-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        className: \"add-item-button\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ShoppingListDetail, \"jFY5tK34DvABfafBaPvRZibxKt0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ShoppingListDetail;\nexport default ShoppingListDetail;\nvar _c;\n$RefreshReg$(_c, \"ShoppingListDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","BASE_URL","ShoppingListDetail","_s","id","navigate","listData","setListData","isLoading","setIsLoading","error","setError","newItem","setNewItem","fetchShoppingList","response","fetch","ok","Error","data","json","err","message","addItem","trim","method","headers","body","JSON","stringify","name","isResolved","updatedList","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","items","map","item","type","checked","onChange","placeholder","value","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Patrik/Documents/Projekty/FrontendHW4/FrontendHW4/src/components/ShoppingListDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './ShoppingListDetail.css';\r\n\r\nconst BASE_URL = 'http://localhost:5000'; // Replace with your backend server URL\r\n\r\nfunction ShoppingListDetail() {\r\n  const { id } = useParams(); // Extract the list ID from the URL\r\n  const navigate = useNavigate();\r\n\r\n  const [listData, setListData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [newItem, setNewItem] = useState('');\r\n\r\n  // Fetch shopping list data when the component mounts or the ID changes\r\n  useEffect(() => {\r\n    const fetchShoppingList = async () => {\r\n      try {\r\n        const response = await fetch(`${BASE_URL}/shopping-lists/${id}`);\r\n        if (!response.ok) throw new Error('Failed to fetch shopping list');\r\n        const data = await response.json();\r\n        setListData(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchShoppingList();\r\n  }, [id]);\r\n\r\n  // Add a new item\r\n  const addItem = async () => {\r\n    if (!newItem.trim()) return;\r\n\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/shopping-lists/${id}/items`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name: newItem, isResolved: false }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to add item');\r\n\r\n      const updatedList = await response.json();\r\n      setListData(updatedList); // Update list with the newly added item\r\n      setNewItem('');\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"shopping-list-container\">\r\n      <header className=\"header\">\r\n        <span className=\"back-button\" onClick={() => navigate('/')}>‚Üê</span>\r\n        <h1>{listData.name}</h1>\r\n      </header>\r\n\r\n      <div className=\"items-container\">\r\n        {listData.items.map((item) => (\r\n          <div key={item.id} className={`item-row ${item.isResolved ? 'resolved' : ''}`}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={item.isResolved}\r\n                onChange={async () => {\r\n                  // Toggle item resolved state\r\n                  const response = await fetch(\r\n                    `${BASE_URL}/shopping-lists/${id}/items/${item.id}`,\r\n                    {\r\n                      method: 'PATCH',\r\n                      headers: { 'Content-Type': 'application/json' },\r\n                      body: JSON.stringify({ isResolved: !item.isResolved }),\r\n                    }\r\n                  );\r\n                  if (response.ok) {\r\n                    const updatedList = await response.json();\r\n                    setListData(updatedList);\r\n                  }\r\n                }}\r\n              />\r\n              <span>{item.name}</span>\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"add-item-section\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter item name\"\r\n          value={newItem}\r\n          onChange={(e) => setNewItem(e.target.value)}\r\n          className=\"add-item-input\"\r\n        />\r\n        <button onClick={addItem} className=\"add-item-button\">\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShoppingListDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}